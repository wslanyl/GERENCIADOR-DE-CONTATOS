# -*- coding: utf-8 -*-
"""Desafio1.CRUDdeagendaempython

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18WceW-1DZoMu0lSE-uBaiANrXOI1-ntI
"""

# Início do desafio 1.
# Sistema criado para gerenciar contatos, usando lógica de programação, e CRUD.


# ESTRUTURA DE DADOS: Lista para armazenar os contatos.

contatos = []
contato_id_counter = 0

# FUNÇÕES CRUD (Create, Read, Update, Delete).
def adicionar_contato():
    """Adiciona um novo contato à lista."""
    global contato_id_counter
    print("\n--- Adicionar Novo Contato ---")
    nome = input("Digite o nome: ")
    telefone = input("Digite o telefone: ")
    email = input("Digite o e-mail: ")

    contato_id_counter += 1
    novo_contato = {
        "id": contato_id_counter,
        "nome": nome,
        "telefone": telefone,
        "email": email
    }
    contatos.append(novo_contato)
    print("Contato adicionado com sucesso!")

def listar_contatos():
    """Exibe todos os contatos cadastrados na lista."""
    print("\n--- Lista de Contatos ---")
    if not contatos:
        print("Nenhum contato cadastrado.")
    else:
        for contato in contatos:
            print(f"ID: {contato['id']}")
            print(f"Nome: {contato['nome']}")
            print(f"Telefone: {contato['telefone']}")
            print(f"E-mail: {contato['email']}")
            print("-" * 20)

def buscar_contato_por_id(contato_id):
    """Função auxiliar para buscar um contato pelo ID."""
    for contato in contatos:
        if contato['id'] == contato_id:
            return contato
    return None

def atualizar_contato():
    """Atualiza os dados de um contato existente."""
    print("\n--- Atualizar Contato ---")
    listar_contatos()
    if not contatos:
        return

    try:
        contato_id = int(input("Digite o ID do contato que deseja atualizar: "))
        contato_para_atualizar = buscar_contato_por_id(contato_id)

        if contato_para_atualizar:
            print(f"Contato selecionado: {contato_para_atualizar['nome']}")
            nome_novo = input(f"Novo nome (atual: {contato_para_atualizar['nome']}): ")
            telefone_novo = input(f"Novo telefone (atual: {contato_para_atualizar['telefone']}): ")
            email_novo = input(f"Novo e-mail (atual: {contato_para_atualizar['email']}): ")

            if nome_novo:
                contato_para_atualizar['nome'] = nome_novo
            if telefone_novo:
                contato_para_atualizar['telefone'] = telefone_novo
            if email_novo:
                contato_para_atualizar['email'] = email_novo

            print("Contato atualizado com sucesso!")
        else:
            print(f"Erro: Contato com ID {contato_id} não encontrado.")
    except ValueError:
        print("Erro: ID inválido. Por favor, digite um número.")


def excluir_contato():
    """Exclui um contato da lista."""
    print("\n--- Excluir Contato ---")
    listar_contatos()
    if not contatos:
        return

    try:
        contato_id = int(input("Digite o ID do contato que deseja excluir: "))
        contato_para_excluir = buscar_contato_por_id(contato_id)

        if contato_para_excluir:
            contatos.remove(contato_para_excluir)
            print(f"Contato de {contato_para_excluir['nome']} excluído com sucesso!")
        else:
            print(f"Erro: Contato com ID {contato_id} não encontrado.")
    except ValueError:
        print("Erro: ID inválido. Por favor, digite um número.")

# FUNÇÃO DE MENU

def exibir_menu():
    """Exibe o menu de opções para o usuário."""
    print("\n" + "=" * 30)
    print("      GERENCIADOR DE CONTATOS")
    print("=" * 30)
    print("1. Adicionar Contato")
    print("2. Listar Contatos")
    print("3. Atualizar Contato")
    print("4. Excluir Contato")
    print("5. Sair")
    print("=" * 30)

# LOOP INFINITO
if __name__ == "__main__":
    while True:
        exibir_menu()
        escolha = input("Digite o número da sua escolha: ")

        if escolha == '1':
            adicionar_contato()
        elif escolha == '2':
            listar_contatos()
        elif escolha == '3':
            atualizar_contato()
        elif escolha == '4':
            excluir_contato()
        elif escolha == '5':
            print("Saindo do programa. Até mais!")
            break
        else:
            print("Opção inválida. Por favor, escolha um número de 1 a 5.")
